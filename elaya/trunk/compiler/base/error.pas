{
 Elaya, the compiler for the elaya language
Copyright (C) 1999-2002  J.v.Iddekinge.
Web    : www.elaya.org

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
}

unit Error;
interface
uses sysutils,progutil,strings,cmp_type;
const
	Err_No_Error              = 0;
	Err_Illegal_Type_Size     = 1000;
	Err_Duplicate_Ident       = 1001;
	Err_Not_Expected          = 1002;
	Err_Unkown_Ident          = 1003;
	Err_Not_A_Type            = 1004;
	Err_More_Public           = 1007;
	Err_Cant_Read_From_expr   = 1010;
	Err_Not_A_Var             = 1011;
	Err_Too_many_Parameters   = 1012;
	Err_Cant_Write_To_Item    = 1013;
	Err_Param_Expected        = 1014;
	Err_Cant_Find_Bool_Type   = 1016;
	Err_Cant_Return_Value     = 1017;
	Err_Must_Return_Value     = 1018;
	Err_Not_Boolean_Type      = 1019;
	Err_Cant_FInd_Str_Type    = 1020;
	Err_Invalid_Operation     = 1021;
	Err_Not_A_Pointer_Type    = 1022;
	Err_Not_A_Member          = 1023;
	Err_Has_No_Members        = 1024;
	Err_Os_Error              = 1025;
	Err_Inverse_Range         = 1026;
	Err_Cant_Define_Vars      = 1027;
	Err_Not_An_Integer_Const  = 1028;
	Err_Cant_Find_Type        = 1029;
	Err_Wrong_Type            = 1030;
	Err_Cast_Type_Larger      = 1031;
	Err_Cant_Index            = 1032;
	Err_Cant_Find_Char_Type   = 1033;
	Err_Public_not_Allowed    = 1034;
	Err_Cant_Determine_Size   = 1035;
	Err_Cant_Find_Write_Proc  = 1036;
	Err_Forwarded_Not_Found   = 1037;
	Err_Unit_Version_misMatch = 1038;
	Err_Program_Failed        = 1039;
	Err_Duplicate_Unit_In_Use = 1040;
	Err_Circ_Unit_Reference   = 1041;
	Err_Recompiling_Failed    = 1042;
	Err_Cant_Execute	      = 1043;
	Err_Rtn_Not_Same           = 1044;
	Err_Invalid_Parameters    = 1045;
	Err_Cant_Adr_Overl        = 1046;
	Err_And_Not_Expected       = 1047;
	Err_not_In_Loop_Block     = 1048;
	Err_Invalid_Os	      = 1050;
	ERR_Reading_Config_Failed = 1051;
	Err_Interp_Config	      = 1052;
	Err_Differs_From_Prev_Def = 1053;
	Err_Prog_Cant_Have_Pubs   = 1054;
	Err_Unit_Must_Have_Pubs   = 1055;
	Err_Forward_Not_ReSolved  = 1056;
	Err_Feature_Not_Possible  = 1057;
	Err_Need_Named_Parameters = 1058;
	Err_Must_Pass_By_Name     = 1059;
	Err_Must_Not_Pass_By_Name = 1060;
	Err_Symbol_Not_Expected   = 1061;
	Err_Not_A_Routine	      = 1063;
	Err_Rtn_Is_Name_Overloaded    = 1064;
	Err_Rtn_Is_Not_extended        = 1065;
	Err_Params_Not_Inh_comp       = 1066;
	Err_Non_Ext_Abs_Needs_main        = 1067;
	Err_Dif_type_needs_main       = 1068;
	Err_Inh_Has_Different_Type    = 1069;
	Err_Has_No_Parent	          = 1070;
	Err_Enc_Not_extended	          = 1071;
	Err_No_Meta_Data_Type         = 1072;
	Err_virt_Allready_virt        = 1073;
	Err_Virt_Allready_Static      = 1074;
	Err_Ovr_Allready_Static       = 1075;
	Err_Ovr_No_Virtual_Found      = 1076;
	Err_Cant_find_ptr_type        = 1077;
	Err_Acc_Must_atl_Protected    = 1078;
	Err_Cant_Inh_Non_virt_Rtn     = 1079;
	Err_Virt_Only_In_Ext_Rtn      = 1080;
	Err_Ident_not_Parameter       = 1081;
	Err_Var_Param_cant_be_vir     = 1082;
	Err_PVN_Cant_Have_Constant    = 1083;
	Err_Param_Differs_From_Parent = 1084;
	Err_non_virt_Wrong_Position   = 1085;
	Err_Too_Many_Index_expr       = 1086;
	Err_Program_Needs_Main	  = 1087;
	Err_Circular_Type_Dep	  = 1088;
	Err_Child_More_Public	  = 1090;
	Err_Cant_Get_Expr_Pointer     = 1091;
	Err_Incompatible_Types	  = 1092;
	Err_Has_No_owner		  = 1093;
	Err_Cant_Use_owner_here       = 1094;
	Err_Rtn_Incomp_For_Over	  = 1095;
	Err_Source_Is_Later		  = 1096;
	Err_Must_Recompile		  = 1097;
	Err_Assembler_Failed	  = 1098;
	Err_Linker_Failed             = 1099;
	Err_Invalid_Default_Code	  = 1100;
	Err_Cant_Array_Index_Type     = 1101;
	Err_Integer_Type_Expr_Exp     = 1102;
	Err_Cant_Use_Dot_Oper         = 1103;
	Err_Rtn_Has_No_Main           = 1104;
	Err_Writing_Link_file_Failed  = 1105;
	Err_Stat_Befor_vir_Param	  = 1106;
	Err_Not_A_Constant             = 1107;
	Err_Not_A_Numeric_Type        = 1108;
	Err_Override_by_Static        = 1109;
	Err_No_Parameters_Expected    = 1110;
	Err_Num_Out_Of_Range          = 1111;
	Err_Cant_Base_Type_On_This    = 1112;
	Err_Invalid_Value             = 1113;
	Err_Expr_Is_Out_Of_Range      = 1114;
	Err_Not_A_Variable		  = 1115;
	Err_Cant_Cast_To_This_Type    = 1116;
	Err_Ovr_Dif_Routine_Type	  = 1117;
	Err_Ovr_Need_Overl		  = 1118;
	Err_Ovr_Need_Name_Overl	  = 1119;
	Err_Ovr_Param_different	  = 1120;
	Err_Ovr_Return_Type_Different = 1121;
	Err_Overload_Differs	  = 1122;
	Err_extended_Not_In_Extern	  = 1123;
	Err_Def_Not_In_Forward        = 1124;
	Err_Cant_Use_Has_Here         = 1125;
	Err_Is_Overloaded	          = 1126;
	Err_Rtn_Has_No_Forward        = 1127;
	Err_Rtn_Requires_Main         = 1128;
	Err_Cant_Use_Private_Ident	  = 1129;
	Err_Routine_Has_Allready_forw = 1130;
	Err_Not_A_String_Constant     = 1131;
	Err_Wrong_External_Type       = 1132;
	Err_Wrong_Calling_Type        = 1133;
	Err_Unkown_COnfig_Variable    = 1134;
	Err_Error                     = 1135;
	Err_Array_Too_big             = 1136;
	Err_Parent_inh_Final          = 1137;
	Err_Parent_is_not_isolated    = 1138;
	Err_Must_Isolate              = 1139;
	Err_Invalid_Public_Type       = 1140;
	Err_Ordinal_Type_Expected     = 1141;
	Err_abstract_routine          = 1142;
	Err_Routine_Is_Not_vir_or_Ext = 1143;
	Err_No_Main_For_Abstr_fun     = 1144;
	Err_Glob_Exists_in_dep_units  = 1145;
	Err_Routine_Has_Abstracts     = 1146;
	Err_Value_Param_Unkown_Size   = 1147;
	Err_Nested_contains_abs       = 1148;
	Err_No_abs_nested_nonvir      = 1149;
	ERR_Overides_non_Routine      = 1150;
	Err_ClassName_Expected        = 1151;
	Err_Identifier_cant_have_vir  = 1152;
	Err_Methode_Expected          = 1153;
	Err_CDTor_only_in_class       = 1154;
	Err_Cant_Find_Routine         = 1155;
	Err_CD_Must_Be_Public	 	   = 1156;
	Err_CD_Cant_be_Isolated		   = 1157;
	Err_Cant_Find_Parameter       = 1158;
	Err_Not_A_Class_Method		   = 1159;
	Err_Ovr_different_kind_obj    = 1160;
	Err_Parent_not_over_ident     = 1161;
	Err_Not_A_Class				   = 1162;
	Err_Wrong_Access_Level        = 1163;
	Err_Recrusive_Call_in_prop    = 1164;
	Err_Type_Differes_from_prop   = 1165;
	Err_Wrong_Kind_ident_for_prop = 1166;
	Err_Property_Routine_Overl    = 1167;
	Err_Parent_class_incompleet   = 1168;
	Err_Cant_use_cur_property     = 1169;
	Err_Dep_Less_Public           = 1170;
	Err_Nested_Require_Isolate    = 1171;
	Err_Def_Class_Incompleet      = 1172;
	Err_Cant_Use_Const_From_OBj   = 1173;
	Err_Duplicate_Main_Keyword    = 1174;
	Err_Forward_No_Main           = 1175;
	Err_Forward_Has_Main          = 1176;
	Err_Not_A_Operator            = 1181;
	Err_Abs_cant_have_main        =1182;
	Err_Vir_ch_Par_has_zu_Size    =1183;
	Err_Array_Expected            =1184;
	Err_Write_Rtn_Only_In_V_Class = 1185;
	Err_Invalid_Number	  	 	   = 1186;
	Err_Error_in_lib_info         = 1187;
	Err_Link_Name_Unkown          = 1188;

	Err_Int_Name_List_Open   = 2000;
	Err_Int_name_List_Closed = 2001;
	Err_Int_Wrong_Enum_list  = 2002;
	Err_INt_No_Enum_Type     = 2003;
	Err_Int_Enum_Type_Set    = 2004;
	Err_Int_Invalid_Tran_Type= 2005;
	Err_Int_Cur_Not_Proc     = 2006;
	Err_int_Dom_Type_Is_Null = 2007;
	Err_int_Not_A_ENum_Const = 2008;
	Err_Int_Exit_Not_In_Proc = 2009;
	Err_Int_Object_Not_Reg   = 2010;
	Err_Int_Invalid_mac_Opt  = 2011;
	Err_Int_Cant_Get_Op_Type = 2012;
	Err_Int_Unit_not_in_List = 2013;
	Err_Int_Duplicate_Dep    = 2014;
	Err_Int_No_Meta_Frame         = 2015;
	Err_Int_Cant_Change_VMT_Item  = 2016;
	Err_Int_Cant_Make_new_Sub     = 2017;
	Err_Int_Abstract_Call	  	  = 2018;
	Err_Int_Too_Many_Nodes        = 2020;
	Err_Int_Routine_SHouldnt_vir  = 2021;
	Err_Int_Value_ret_Unk_Err     = 2022;
	Err_Int_Add_Non_Glob_To_Globl = 2023;
	Err_Int_Cur_Ident_No_EC       = 2024;
	
	Err_Fail_Create_Unit_File= 3000;
	Err_Invalid_Unit         = 3001;
	Err_Cant_Open_Unit_File  = 3002;
	Err_Fail_Write_Unit_File = 3003;
	Err_Cant_Open_Input_File = 3004;
	Err_Cant_Open_File	     = 3005;

	Err_Read_Without_Write        =3500;
	Err_Read_Some_without_Write   = 3501;
	Err_Write_Without_Read        = 3502;
	Err_Write_Some_Without_Read   = 3503;
	Err_Variable_Not_Used         = 3504;

	
	Fat_Pushed_INst_Not_in_List  = 4000;
	Fat_Cant_Get_Stack_Frame_Reg = 4001;
	Fat_Cant_Get_Stack_Pointer   = 4002;
	Fat_Cant_Get_Func_Ret_Reg    = 4003;
	Fat_Cant_Open_Asm_File       = 4004;
	Fat_Cant_Open_Lis_File       = 4005;
	Fat_Out_Of_Registers         = 4006;
	FAT_Out_Is_Not_Register      = 4007;
	FAT_Try_Dec_Reg_Zero_UseCnt  = 4008;
	Fat_Try_To_UnUse_Forced_Reg  = 4009;
	FAT_Try_To_Force_InUse_Reg   = 4010;
	FAT_Try_To_Wrongly_Unforce   = 4011;
	FAT_All_Ready_Reg_Assigned   = 4012;
	FAT_Cant_Change_SIze         = 4013;
	FAT_Invalid_Variable_Size    = 4014;
	FAT_At_Temp_Stack_Bottom     = 4015;
	FAT_Pop_Not_At_Top           = 4016;
	FAT_Module_Not_Set           = 4017;
	FAT_Add_Changes_Res_Is_Out   = 4018;
	FAT_Add_Out_Res_Is_Changes   = 4019;
	FAT_Extra_offset_not_allowed = 4020;
	FAT_Cant_Get_Register_Res    = 4021;
	FAT_Output_Must_be_Register  = 4022;
	FAT_Cant_Create_Mac_Type     = 4023;
	FAT_Only_Force_Output        = 4024;
	FAT_Invalid_Flag             = 4025;
	FAT_Item_Duplicated_inserted = 4026;
	FAT_Cant_Find_Register       = 4027;
	FAT_Load_header_No_Set       = 4028;
	FAT_Cant_Combine_US_Invalid  = 4029;
	FAT_Cant_Load_Current_Unit   = 4030;
	FAT_Invalid_Unit_Level       = 4031;
	FAT_Linked_List_Damaged      = 4032;
	Fat_Object_Not_external      = 4033;
	FAT_abstract_routine        = 4034;
	FAT_Cant_Find_Config	 = 4035;
	FAT_Cant_Handle_Os           = 4036;
	FAT_Invalid_Identnumber      = 4037;
	FAT_Invalid_Mac_Number       = 4038;
	FAT_Mandatory_mac_Not_Found  = 4039;
	FAT_Abstract_Call            = 4040;
	FAT_Resource_Not_Found       = 4041;
	FAT_Invalid_Access_Flag      = 4042;
	FAT_Cant_Combine_Resources   = 4043;
	FAT_Invalid_Register	 = 4044;
	FAT_Storage_All_Reserved     = 4045;
	FAT_Storage_Not_Init	 = 4046;
	FAT_Invalid_Operator	 = 4047;
	FAT_Conv_Type_To_Large	 = 4048;
	FAT_Change_Item_Not_Found	 = 4049;
	FAT_Invalid_Ptr_free	 = 4050;
	FAT_Dup_LCB_Label		 = 4051;
	FAT_Cant_Det_Jump_Label	 = 4052;
	FAT_Routine_Not_Set	 	 = 4053;
	FAT_RoutinePoc_Not_Set	 = 4054;
	FAT_Ptr_Item_Invalid	 = 4055;
	FAT_No_Addressing_Defined    = 4056;
	FAT_No_Frame_Defined	 = 4057;
	FAT_Try_To_Push_Fixed        = 4058;
	FAT_Cant_Change_Resource     = 4059;
	FAT_Resource_Released	 = 4060;
	FAT_Invalid_Byte_Pos	 = 4061;
	Fat_Cant_Find_Master	 = 4062;
	FAT_Master_Not_Locked	 = 4063;
	FAT_No_Config_Section	 = 4064;
	FAT_Invalid_Module		 = 4065;
	FAT_Cant_Find_Parameter      = 4066;
	FAT_Invalid_REC_Option	 = 4067;
	FAT_Invalid_Mac_Metric	 = 4068;
	FAT_No_Stack_Frame_Invalid   = 4070;
	FAT_No_Main_Proc_Found       = 4071;
	FAT_Proc_Has_Allready_Locals = 4072;
	FAT_Proc_Has_No_Poc          = 4073;
	FAT_Shouldnt_have_poc        = 4074;
	FAT_Has_No_Poc               = 4075;
	FAT_Cant_Find_meta_Parameter = 4076;
	FAT_Cant_Find_Stack_Resource = 4077;
	FAT_Try_Rel_Res_From_Use     = 4078;
	FAT_Can_Get_Value_Pointer    = 4079;
	FAT_Invalid_Pop_Addressing   = 4080;
	FAT_Prot_Is_Current	         = 4081;
	FAT_Invalid_Operand_Size     = 4082;
	FAT_Addressing_not_found     = 4083;
	FAT_Not_In_Owner_List        = 4084;
	FAT_Can_Match_Owner_hyr      = 4085;
	FAT_Cant_Find_Use	         = 4086;
	FAT_Try_Change_UnUsed_Res   = 4087;
	FAT_Mac_Num_To_high         = 4088;
	FAT_IDent_Is_Not_A_Type	    = 4089;
	FAT_No_Current_definition   = 4090;
	FAT_Current_List_Empty	    = 4091;
	FAT_Dep_Res_In_Use          = 4092;
	FAT_NO_Current_ROutine      = 4093;
	FAT_Obj_Allready_In_Obj_List= 4094;
	FAT_SPlit_Without_Main      = 4095;
	FAT_Cant_Create_Nodes_here  = 4096;
	FAT_Operant_To_big          = 4097;
	FAT_Node_Is_NULL            = 4098;
	Fat_Combine_Wrong_Type_du   = 4099;
	FAT_no_du_list_from_context = 4100;
	FAT_Wrong_Class_Type        = 4101;
	procedure GetError(ParErrorNo:TErrorTYpe;var ParMsg:string);
	procedure Fatal(ParError:TErrorType;const ParRes:string);
	procedure Fatal(PArError:TErrorTYpe;const ParArray:array of const);
	implementation
	
	
procedure Fatal(ParError:TErrorType;const ParRes:string);
var vlMsg:pchar;
begin
	writeln('Fatal error:');
	case ParError of
	Fat_Pushed_Inst_Not_In_List  :vlMSg := 'Try to Push instruction to CIL witch doesn''''t belong to IL';
	Fat_Cant_Get_Stack_Frame_Reg :vlMsg := 'Can''t get stack frame register';
	FAT_Cant_Get_Stack_Pointer   :vlMsg := 'Can''t get stack pointer register';
	Fat_Cant_Get_Func_Ret_Reg    :vlMsg := 'Can''t get function return register';
	Fat_Cant_Open_Asm_File       :vlMsg := 'Can''t open asm file';
	Fat_Cant_Open_Lis_File       :vlMsg := 'Can''t open lis file';
	Fat_Out_Of_Registers         :vlMsg := 'Out of Registers';
	FAT_Out_Is_Not_Register      :vlMsg := 'Operand of instruction is not a register';
	FAT_Try_Dec_Reg_Zero_UseCnt  :vlMsg := 'Try to decrement zero use count';
	FAT_Try_To_UnUse_Forced_Reg  :vlMsg := 'Try to UnUse Forced register';
	FAT_Try_To_Force_InUse_Reg   :vlMsg := 'Try to force an InUse Register';
	FAT_Try_To_Wrongly_UnForce   :vlMSg := 'Try to Unforce register witch is not forced';
	FAT_All_Ready_Reg_Assigned   :vlMsg := 'Allready register assigned to pseude register';
	FAT_Cant_Change_Size         :vlMsg := 'Can''t change resource size';
	FAT_Invalid_Variable_Size    :vlMsg := 'Invalid variable length';
	FAT_At_Temp_Stack_Bottom     :vlMsg := 'Try to pop at bottom of temp stack ' ;
	FAT_Pop_Not_At_Top           :vlMsg := 'try to pop not from top of stack';
	FAT_Module_Not_Set           :vlMsg := 'Module not Set';
	FAT_Add_Changes_Res_Is_Out   :vlMsg := 'Added ''also changes'' resource is allready a output resource';
	FAT_Add_Out_Res_Is_Changes   :vlMsg := 'Added ''Out Resource'' is also a ''also Changes'' resource';
	FAT_Extra_offset_not_allowed :vlMsg := 'Extra offset not allowed here';
	FAT_Cant_Get_Register_Res    :vlMsg := 'Can''t get register resource';
	FAT_Output_Must_be_Register  :vlMsg := 'Output must be a register';
	FAT_Cant_Create_Mac_type     :vlMSg := 'Can''t create this mac type here';
	FAT_Only_Force_Output        :vlMsg := 'Output can only be forced to register';
	FAT_Invalid_Flag             :vlMSg := 'Invalid Flag';
	FAT_Item_Duplicated_inserted :vlMsg := 'Item Duplicate inserted in list';
	FAT_Cant_Find_Register       :vlMsg := 'Cant find register';
	FAT_Load_header_No_Set       :vlMsg := 'US_Must_Load_Header and US_Must_Load must be set both';
	FAT_Cant_Combine_US_Invalid  :vlMsg := 'US_Invalid can''t be used with other unit status flags';
	FAT_Cant_Load_Current_Unit   :vlMSg := 'US_Must_Load_header or US_Must_Load set :Cant load current unit';
	FAT_Invalid_Unit_Level       :vlMsg := 'Invalid unit level';
	FAT_Linked_List_Damaged      :vlMsg := 'Linklist damaged';
	Fat_Object_Not_external      :vlMsg := 'Object is not a external interface';
	Fat_abstract_routine        :vlMsg := 'Call to abstract function';
	FAT_Cant_Find_Config	 :vlMsg := 'Cant find config file';
	FAT_Cant_Handle_Os	         :vlMsg := 'Cant handle Os here:Os invalid or handler missing';
	FAT_Invalid_IdentNumber      :vlMsg := 'Invalid identnumber';
	FAT_Invalid_Mac_Number       :vlMsg := 'Invalid Mac number';
	FAT_Mandatory_mac_Not_Found  :vlMsg := 'Mandatory mac not found';
	FAT_Abstract_Call            :vlMsg := 'Abstract call';
	FAT_Resource_Not_Found       :vlMsg := 'Resource not found';
	FAT_Invalid_Access_Flag      :vlMsg := 'Invalid Access flag';
	FAT_Cant_Combine_Resources   :vlMsg := 'Can''t Combine Resources';
	FAT_Invalid_Register	 :vlMsg := 'Invalid Register';
	FAT_Storage_All_Reserved     :vlMsg := 'Storage allready reserved';
	FAT_Storage_Not_Init	 :vlMsg := 'TLMac has no storage space';
	FAT_Invalid_Operator         :vlMsg := 'Invalid operator';
	FAT_Conv_Type_To_Large       :vlMSg := 'Convert type is to large';
	FAT_Change_Item_Not_Found    :vlMsg := 'Change item not found';
	FAT_Invalid_Ptr_free	 :vlMsg := 'Try to free an invalid pointer';
	FAT_Dup_lCB_Label		 :vlMsg := 'Try to  recreate LCB label';
	FAT_Cant_det_jump_label	 :vlMsg := 'Can''t Determine jump label';
	FAT_Routine_Not_Set        :vlMsg := 'Routine not set';
	FAT_RoutinePoc_Not_Set	 :vlMsg := 'Routinepoc not set';
	FAT_Ptr_Item_Invalid	 :vlMsg := 'Pointer item invalid';
	FAT_No_Addressing_Defined    :vlMsg := 'No Addressing defined';
	FAT_No_Frame_Defined	 :vlMsg := 'No Frame defined';
	FAT_Try_To_Push_Fixed	 :vlMsg := 'Try to pushed fixed resource';
	FAT_Cant_Change_Resource :vlMsg := 'Can''t change resource';
	FAT_Resource_Released	 :vlMsg := 'Resource is released';
	FAT_Invalid_Byte_Pos	 :vlMsg := 'Invalid byte position';
	FAt_Cant_Find_Master	 :vlMsg := 'Can''t find storage master';
	FAT_Master_Not_Locked	 :vlMsg := 'Storage master not locked';
	FAT_No_Config_Section	 :vlMsg := 'No config section';
	FAT_Invalid_Module		 :vlMsg := 'Invalid module';
	FAT_Cant_Find_Parameter      :vlMsg := 'Can''t find parameter';
	FAT_Invalid_Rec_Option	 :vlMsg := 'Invalid MAC  option';
	FAT_Invalid_Mac_Metric	 :vlMsg := 'INvalid Mac metric';
	Fat_No_Stack_Frame_Invalid   :vlMsg := 'Not stackframe invalid with Routine';
	Fat_No_Main_proc_Found	 :vlMsg := 'No main  found in extended routine';
	FAT_Proc_Has_Allready_Locals :vlMsg := 'Proc has allready locals';
	FAT_Proc_Has_No_Poc		 :vlMsg := 'Prog has no poc';
	FAT_Shouldnt_Have_Poc	 :vlMsg := 'Shouln''t have poc';
	FAT_Has_no_Poc		 :vlMsg := 'Has no poc';
	FAT_Cant_Find_meta_Parameter :vlMsg := 'Can''t find meta parameters';
	FAT_Cant_Find_Stack_Resource :vlMsg := 'Can''t find stack resource';
	FAT_Try_Rel_Res_From_Use     :vlMsg := 'Tries do release stack Variable';
	FAT_Can_Get_Value_Pointer    :vlmsg := 'Cant get value pointer';
	FAT_Invalid_Pop_Addressing   :vlMsg := 'Popping addressing invalid';
	FAT_Prot_Is_Current	         :vlMsg := 'Protection flag is AF_Current';
	FAT_Invalid_Operand_Size     :vlMsg := 'Invalid operand size';
	FAT_Addressing_not_found     :vlMsg := 'Addressing not found for context';
	FAT_Not_In_Owner_List	 :vlMsg := 'Identfier is not a owner of identifier';
	FAT_Can_Match_Owner_hyr      :vlMsg := 'Can''t match owner hyrargie';
	FAT_Cant_Find_Use            :vlMsg := 'Can''t find resource use';
	FAT_try_Change_UnUsed_Res    :vlMsg := 'Tried to modify unused resource';
	FAT_Mac_Num_To_High		     :vlMsg := 'Mac number to high';
	FAT_IDent_Is_Not_A_Type	     : vlMsg := 'Identfier is not a type';
	FAT_No_Current_definition    : vlMsg := 'Current definition is not set yet';
	Fat_Current_List_Empty		 : vlMsg := '"Current list" is empty';
	FAT_Dep_Res_In_Use           : vlMsg := 'Depended resource is in use';
	FAT_No_Current_ROutine       : vlMsg := 'Current routine not set';
	FAT_Obj_Allready_In_Obj_List : vlMsg := 'Object Allready in object List';
	FAT_SPlit_Without_Main       : vlMsg := 'Can''t split routine without main';
	FAT_Cant_Create_Nodes_here   : vlMsg := 'Can''t create nodes here';
   FAT_Operant_To_big           : vlMsg := 'Operand to big';
	FAT_Node_Is_NULL				  : vlMsg := 'Node is null';
	FAT_Combine_Wrong_Type_DU    : vlMsg := 'Try to combine wrong type of definitionuse items';
	FAT_no_du_list_from_context  : vlMsg := 'No definition-use list returned for context';
	FAT_Wrong_Class_Type         : vlMsg := 'Wrong classtype';
	else writeln('Unkown fatal error '+IntToStr(ParError));
	end;
	writeln(vlMsg);
if length(ParRes)> 0 then begin
	writeln('Other information:');
	writeln('==================');
	writeln(ParRes);
end;
writeln;writeln('Terminated...');
runerror(1);
raise exception.Create(vlMsg);
end;


procedure Fatal(PArError:TErrorTYpe;const ParArray:array of const);
var vlStr:string;
begin
	ArrayToStr(ParArray,vLStr);
	Fatal(ParError,vlStr);
end;


procedure GetError(PArErrorNo:TErrorType;var ParMsg:String);
var    vlMsg:Pchar;
begin
	str(ParErrorNo,ParMsg);
	ParMsg := 'Unkown error no :' + ParMsg;
	vlMsg := nil;
	case PArErrorNo of
		Err_Illegal_type_Size    :vlMsg := 'Illegal type size';
		Err_Duplicate_Ident      :vlMsg := 'Duplicate identifier';
		Err_Not_Expected         :vlMsg := 'Not Expected';
		Err_Unkown_Ident         :vlMsg := 'Unkown identifier';
		Err_Not_A_Type           :vlMsg := 'Identifier is not a type';
		Err_More_Public          :vlMsg := 'Identifier is less public as the definition in wich it is used';
		Err_Cant_Read_From_Expr  :vlMsg := 'Expression doesn''t evaluate to a value';    {*}
		Err_Not_A_Var            :vlMsg := 'Identifier is not a variable';
		Err_Too_Many_Parameters  :vlMsg := 'Call to routine has more parameters as it'' definition';
		Err_Cant_Write_To_Item   :vlMsg := 'Can''t write to expression ';
		Err_Param_Expected       :vlMsg := 'Parameter Expected';
		Err_Cant_Find_Bool_Type  :vlMsg := 'Can''t find ''boolean'' type';
		Err_Cant_Return_Value    :vlMsg := 'Can''t return a value from here';
		Err_Must_Return_Value    :vlMsg := 'Must Retrun a value';
		Err_Not_Boolean_Type     :vlMsg := 'Not a boolean type';
		Err_Cant_Find_Str_Type   :vlMsg := 'Can''t find a default string type';
		Err_Invalid_Operation    :vlMsg := 'Invalid operation';
		Err_Not_A_Pointer_Type   :vlMsg := 'Expression is not a pointer type';
		Err_Not_A_Member         :vlMsg := 'Identifier is not a member';
		Err_Has_No_Members       :vlMsg := 'Identifier has no members';
		Err_Os_Error             :vlMsg := 'Os-Error';
		Err_Inverse_Range        :vlMsg := 'Range should be upwards and not downwards';
		Err_Cant_Define_vars     :vlMsg := 'Can''t Define a variable here';
		Err_Not_An_Integer_Const :vlMsg := 'Not an integer typed constant identifier';
		Err_Cant_Find_Type       :vlMsg := 'Can''t find a type for this expression';
		Err_Wrong_Type           :vlMsg := 'Expression has a wrong type for this operation';  {?}
		Err_Cast_Type_Larger     :vlMsg := 'Casted type is larger as the original type';
		Err_Cant_INdex           :vlMsg := 'Array index not allowed here';
		Err_Cant_Find_Char_Type  :vlMsg := 'Cant Find a default Char Type';
		Err_Public_not_Allowed   :vlMsg := '''Public'' not allowed here';
		Err_Cant_Determine_Size   :vlMsg := 'Can''t get size of object';
		Err_Cant_Find_Write_Proc :vlMsg := 'Can''t find  procedure for ''write'' command';
		Err_Forwarded_Not_Found      : vlMsg := 'Forward declared object not found';
		Err_Unit_Version_misMatch    : vlMsg := 'Unit version mismatch';
		Err_Program_Failed           : vlMsg := 'Program failed';
		Err_Duplicate_Unit_In_Use    : vlMsg := 'Duplicate unit in use list';
		Err_Circ_Unit_Reference      : vlMsg := 'Circular reference of units';{?}
		Err_Recompiling_Failed       : vlMsg := 'Recompile of unit failed';
		Err_Cant_Execute	         : vlMsg := 'Can''t execute identifier';
		Err_Rtn_Not_Same             : vlMsg := 'Overloading must be both procedure or function with same return type';
		Err_Invalid_Parameters       : vlMsg := 'Invalid parameters';
		Err_Cant_Adr_Overl           : vlMsg := 'Can''t get address from  a overloaded function or procedure';
		Err_And_Not_Expected	     : vlMsg := '"And" Clause not expected';
		Err_Not_In_Loop_block        : vlMsg := 'Not in loop block';
		Err_Invalid_Os               : vlMsg := 'Invalid Os';
		ERR_Reading_Config_Failed    : vlMsg := 'Reading configuration failed';
		Err_Interp_Config	         : vlMsg := 'Error when  interpreting configuration';
		Err_Differs_From_Prev_Def    : vlmsg := 'Identifier differs from earlier definition';
		Err_Prog_Cant_Have_Pubs      : vlMsg := 'Only a unit can have a public section';
		Err_Unit_Must_Have_Pubs      : vlMsg := 'Unit must have a public section';
		Err_Forward_not_Resolved     : vlMsg := 'Forward definition not resolved';
		Err_Feature_Not_Possible     : vlMsg := 'Feature not possible with current settings';
		Err_Need_Named_Parameters    : vlMsg := 'Named parameters needed to find  overloaded routine';
		Err_Cant_Open_Input_File     : vlMsg := 'Can''t open input file';
		Err_Must_Pass_By_Name        : vlMsg := 'Must pass parameter by name';
		Err_Must_Not_pass_By_Name    : vlMsg := 'Must pass parameter not by name';
		Err_Symbol_Not_Expected      : vlMsg := 'Symbol not expected';
		Err_Not_A_Routine	         : vlMsg := 'Not a routine';
		Err_Rtn_Is_Name_Overloaded   : vlMsg := 'Routine is name overloaded';
		Err_Rtn_is_Not_extended      : vlMsg := 'Routine is not extended';
		Err_Params_Not_Inh_comp      : vlMsg := 'Parameters are not inheritable compatible';
		Err_Non_Ext_Abs_Needs_main   : vlMsg := 'Non extended and non abstract routine needs main routine';
		Err_Has_No_Parent            : vlMsg := 'Parent not found';
		Err_Dif_type_needs_main      : vlMsg := 'Inherited from a different type of named routine needs main Routine'; {beter}
		Err_No_Meta_Data_Type        : vlMsg := 'Can''t find type for Meta data';
		Err_Inh_Has_Different_Type   : vlMsg := 'Inherited from function/operator with differen return type  needs main Routine';
		Err_Enc_Not_extended	         : vlMsg := 'Owner of routine is not extended';
		Err_virt_Allready_virt       : vlMsg := 'Duplicate virtual identifier';
		Err_Virt_Allready_Static     : vlMsg := 'Try to redeclare a static identifier by a virtual identifier';
		Err_Ovr_Allready_Static      : vlMsg := 'Try to override a static identifier';
		Err_Ovr_No_Virtual_Found     : vlMsg := 'Can''t find virtual identifier to override';
		Err_Cant_Find_Ptr_Type       : vlMSg := 'Can''t find pointer type';
		Err_Acc_Must_atl_Protected   : vlMsg := 'Access must be  protected or more for virtual routine';
		Err_Cant_Inh_Non_virt_Rtn    : vlMsg := 'Can''t inherit non virtual routine';  {?}
		Err_Virt_Only_In_Ext_Rtn     : vlMsg := 'Virtual parameter only allowed in a extended routine';
		Err_Ident_not_Parameter      : vlMsg := 'Identifier is not a parameter';
		Err_Var_Param_cant_be_vir    : vlMsg := '''var'' parameter can''t be virtual';
		Err_PVN_Cant_Have_Constant	 : vlMsg := 'Parameter not virtual, it can''t be replaced by a constant';
		Err_Param_Differs_From_Parent: vlmsg := 'Parameter differs from parent';  {Beter}
		Err_non_virt_Wrong_Position  : vlMsg := 'Non virtual parameter is at the wrong position';
		Err_Too_Many_Index_expr      : vlMsg := 'To many array index expressions';
		Err_Program_Needs_Main       : vlMsg := 'Program needs ''main'' routine';     {?}
		Err_Child_More_Public        : vlMsg := 'Routine is more public as parent';
		Err_Circular_Type_Dep        : vlMsg := 'Circular type dependence';
		Err_Cant_Get_Expr_Pointer    : vlMsg := 'Can''t get pointer to expression';
		Err_Incompatible_Types       : vlMsg := 'Incompatible types';
		Err_Has_No_owner             : vlMsg := 'Identifier hasn''t got an owner';
		Err_Cant_Use_owner_here      : vlMsg := 'Can''t use ''owner'' here';
		Err_Rtn_Incomp_For_Over      : vlMsg := 'Routine incompatible for overriding';
		Err_Source_Is_Later          : vlMsg := 'Source file date/time stamp is changed';
		Err_Must_Recompile			 : vlMsg := 'Must recompile';
		Err_Assembler_Failed		 : vlMsg := 'Assembler failed';
		Err_Linker_Failed            : vlMsg := 'Linker failed';
		Err_Invalid_Default_Code	 : vlmsg := 'This type of default is not allowed here';
		Err_Cant_Array_Index_Type    : vlMsg := 'Array index not allowed with this type';
		Err_Integer_Type_Expr_Exp    : vlMSg := 'Integer type expression expected';
		Err_Cant_Use_Dot_Oper		 : vlMsg := 'Can''t use "." operator here';
		Err_Rtn_Has_No_Main			 : vlMsg := 'Routine has no main';
		Err_Writing_Link_FIle_Failed : vlMsg := 'Writing linkfile(LINK.RES) failed';
		Err_Stat_Befor_vir_Param	 : vlMsg := 'Static parameter must come before virtual parameters';
		Err_Override_by_Static		 : vlMsg := 'Virtual routine is overriden by static routine';
		Err_Not_A_Constant			 : vlMsg := 'Not a constant';
		Err_Not_A_Numeric_Type		 : vlMsg := 'Not a numeric type';
		Err_No_Parameters_Expected   : vlMsg := 'No parameters  expected';
		Err_Num_Out_Of_Range		 : vlMsg := 'Number out of range';
		Err_Cant_Base_Type_On_This   : vlMsg := 'Can''t create type base on this type';
		Err_Invalid_Value            : vlMsg := 'Value is invalid';
		Err_Expr_Is_Out_Of_Range     : vlMsg := 'Expression is out of range';
		Err_Not_A_Variable			 : vlMsg := 'Not a variable';
		Err_Cant_Cast_To_This_Type   : vlMsg := 'Can''t cast to this type';
		Err_Cant_Use_Has_Here		 : vlMsg := 'Can''t use ''has'' here';
		Err_Ovr_Dif_Routine_Type	 : vlMsg := 'Routine is overriden by different routine type';
		Err_Ovr_Need_Overl			 : vlMsg := 'Need "Overload" clause because the same routine in the parent is also overloaded';
		Err_Ovr_Need_Name_Overl      : vlMsg := 'Need "Overload name" clause  because the same routine in the parent  is also overloaded by name';
		Err_Ovr_Param_different		 : vlMsg := 'Tried to override by a routine with different parameters';
		Err_Ovr_Return_Type_Different: vlMsg := 'Can''t override by this routine because return type is different';
		Err_Overload_Differs		 : vlMsg := 'Type of overloading differs from previous definition';
		Err_extended_Not_In_Extern	 : vlMsg := 'extended routines not allowed in External declaration';
		Err_Def_Not_In_Forward		 : vlmsg := 'Idenifier not found in forward';
		Err_Is_Overloaded			 : vlMsg := 'Identfier is overloaded';
		Err_Rtn_Has_No_Forward		 : vlMsg := 'extended routine does not contain forward defined routines';
		Err_Rtn_Requires_Main		 : vlMsg := 'Routine requires main';
		Err_Cant_Use_Private_Ident	 : vlMsg := 'Can''t use a private identifier here';
		Err_Routine_Has_Allready_forw: vlMsg := 'Routine has allready a forward section';
		Err_Not_A_String_Constant	 : vlMsg := 'Not a string type expression';
		Err_Wrong_External_Type		 : vlMsg := 'Wrong external type';
		Err_Wrong_Calling_Type		 : vlMsg := 'Wrong Calling type';
		Err_Unkown_COnfig_Variable	 : vlMsg := 'Unkown config variable';
		Err_Error					 : vlMsg := 'Error:';
		Err_Array_Too_big			 : vlMsg := 'Array is too big';
		Err_Parent_inh_Final		 : vlMsg := 'Can''t inherit from this routine, parent is "inherit final"';
		Err_Parent_is_not_isolated	 : vlMsg := 'Parent is not isolated';
		Err_Must_Isolate			 : vlMsg := 'Routine me be isolated because parent is also isolated';
		Err_Invalid_Public_Type		 : vlMsg := 'Invalid public type';
		Err_Ordinal_Type_Expected	 : vlMsg := 'Ordinal type expected';
		Err_abstract_routine		 : vlMsg := 'Abstract routine';
		Err_Routine_Is_not_vir_or_Ext: vlMsg := 'Routine is not virtual or extended';
		Err_No_Main_For_Abstr_fun	 : vlMsg := 'Not a main expected for a abstract function';
		Err_Glob_Exists_in_dep_units : vlMsg := 'Global allread exists in this or in a depended unit';
		Err_Routine_Has_Abstracts	 : vlMsg := 'Routine has abstract identifiers';
		Err_Value_Param_Unkown_size  : vlMsg := 'Value param can''t have a unkown size';
		Err_Nested_contains_abs		 : vlMsg := 'Non virtual nested routine contains abstract routines';
		Err_No_abs_nested_nonvir 	 : vlMsg := 'Non virtual nested routine cant have abstract routines';
		ERR_Overides_non_Routine	 : vlMsg := 'Identfier overrides another identifier wich is not a routine';
		Err_ClassName_Expected		 : vlMsg := 'Class name expected';
		Err_Identifier_cant_have_vir : vlMsg := 'Identifier cant have virtual identfier';
		Err_Methode_Expected		 : vlMsg := 'Methode identfier expected';
		Err_CDTOR_only_in_class      : vlMsg := 'Constructors or destructors can only be used in a Class';
		Err_Cant_Find_Routine        : vlMsg := 'Can''t find routine';
		Err_CD_Must_Be_Public		 : vlMsg := 'Constructors and destructors must allways be public';
		Err_CD_Cant_be_Isolated		 : vlMsg := 'Constructors and destructors can''t be isolated';
		Err_Cant_Find_Parameter 		 : vlMsg := 'Can''t find parameter';
		Err_Not_A_Class_Method		 : vlMsg := 'Not a class method';
		Err_Ovr_different_kind_obj	 : vlMsg := 'Override different kinde of identifier';
		Err_Parent_not_over_ident	 : vlMsg := 'Parent of class doesn''t descent from overriden identifier';
		Err_Wrong_Access_Level		 : vlMsg := 'Wrong access level';
		Err_Not_A_Class				 : vlMsg := 'Not a class';
		Err_Recrusive_Call_in_prop   : vlMsg := 'Recruisive call not routine in property access';
        Err_Type_Differes_from_prop  : vlMSg := 'Identifier has differen type as property';
    	Err_Wrong_Kind_ident_for_prop: vlMsg := 'Wrong kind of identifier for property';
		Err_Property_Routine_Overl   : vlMsg := 'Property routine is overloaded';
		Err_Parent_class_incompleet  : vlMsg := 'Parent class is incompleet';
		Err_Cant_use_cur_property    : vlMsg := 'Can''t use current property';
		Err_Dep_Less_Public			 : vlMsg := 'Identifier on wich expression depends is less public as current access level';
		Err_Nested_Require_Isolate   : vlMsg := 'Nested class must be isolated';
		Err_Def_Class_Incompleet     : vlMsg := 'Definition of class incompleet';
		Err_Cant_Use_Const_From_OBj  : vlMsg := 'Can''t use constructor from a object';
		Err_Duplicate_Main_Keyword   : vlMsg := 'Duplicate usage of the main keyword';
		Err_Forward_No_Main			 : vlMsg := 'Routine is defined without a main prevously';
		Err_Forward_Has_Main         : vlMsg := 'Previous definition of this routine is defined with main';
		Err_Not_A_Operator			 : vlmsg := 'Identifier is not a operator';
		Err_Abs_cant_have_main       : vlMsg := 'Abstract routine can''''t have a main';
		Err_Vir_ch_Par_has_zu_Size : vlMsg := 'Virtual parameter can''''t have has zero or an undefined size';
		Err_Array_Expected			  : vlMsg := 'Array type expression  expected';

		Err_Read_Without_Write       : vlMsg := 'Read of unitialised variable' ;
		Err_Read_Some_without_Write  : vlMsg := 'Read of variable which is sometimes unitialised';
		Err_Write_Without_Read       : vlMsg := 'Previous value is not used';
		Err_Write_Some_Without_Read  : vlMsg := 'Previous value is sometimes not used';
		Err_Variable_Not_Used        : vlMsg := 'Variabel is not used';
		Err_Write_Rtn_Only_In_V_Class: vlmsg := 'Write routine can only be used in value classes';
		Err_Invalid_Number           : vlMsg := 'Conversion string => number returned Invalid number';
		Err_Error_in_Lib_Info        : vlMsg := 'Error in link info file';
		Err_Link_Name_Unkown         : vlMsg := 'Unkown link info name';


		Err_Int_Name_List_Open       : vlMsg := 'Internal error : Name list still open';
		Err_Int_Name_List_Closed     : vlMsg := 'Internal error : Name list is closed';
		Err_int_Wrong_Enum_List      : vlMsg := 'Internal error : Wrong enumiration list';
		Err_int_No_Enum_Type         : vlMsg := 'Internal error : Not a enumiration type';
		Err_Int_Enum_Type_Set        : vlMsg := 'Internal error : Enumiration type allready set';
		Err_Int_Invalid_Tran_Type    : vlMsg := 'Internal error : Invalid transfer type at AddParam';
		Err_Int_Cur_Not_Proc         : vlMsg := 'Internal error : Currentident is not a procedure';
		Err_int_Dom_Type_Is_Null     : vlMsg := 'Internal error : Domtype is null';
		Err_int_Not_A_ENum_const     : vlMsg := 'Internal error : Is not a enumeration constant';
		Err_Int_Exit_Not_In_Proc     : vlMsg := 'Internal error : Try to exit when not currently in a procedure';
		Err_Int_Object_Not_Reg       : vlMsg := 'Internal error : Object not registrated in stream system';
		Err_Int_Invalid_Mac_Opt      : vlMsg := 'Internal error : Invalid ''Mac Option'' ';
		Err_Int_Cant_Get_Op_Type     : vlMsg := 'Internal error : Can''t get operation type';
		Err_Int_Unit_not_in_List     : vlMsg := 'Internal error : Can''t find unit in list when adding dependence';
		Err_Int_Duplicate_Dep        : vlMsg := 'Internal error : Duplicate dependence ';
		Err_Int_No_Meta_Frame        : vlMsg := 'Internal error : Can''t get meta frame';
		Err_Int_Cant_Change_VMT_Item : vlMsg := 'Internal error : Can''t change VMT item';
		Err_Int_Cant_Make_new_Sub    : vlMsg := 'Internal error : Can''t make short new routine';
		Err_Int_Abstract_Call		 : vlMsg := 'Internal error : abstract call';
		Err_Int_Too_Many_Nodes       : vlMsg := 'Internal error : Too many nodes added to node-sub list';
		Err_Int_Routine_SHouldnt_vir : vlMsg := 'Internal error : Routine should not be virtual';
		Err_Int_Value_ret_Unk_Err    : vlMsg := 'Internal error : TValue operation returns unkown status';
		Err_Int_Add_Non_Glob_To_Globl: vlMsg := 'Internal error : Add non global to global list';
		Err_Int_Cur_Ident_No_EC		 : vlMsg := 'Internal error : Current ident is not a EnumCollection';

		Err_Fail_Create_Unit_File    : vlMsg := 'Failed to create unit file';
		Err_Invalid_Unit             : vlMsg := 'Invalid unit';
		Err_Cant_Open_Unit_File      : vlMsg := 'Can''t open unit file';
		Err_Fail_Write_Unit_File     : vlMsg := 'Failed to Write to unit file';
		Err_Cant_Open_File			 : vlMsg := 'Can''t open file';
end;
if vlMsg <> nil then ParMsg := strpas(vlMsg);
end;

end.

