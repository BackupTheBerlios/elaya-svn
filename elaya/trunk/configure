#   Elaya,; the compiler for the ;elaya language
#    Copyright (C) 1999,2001  J.v.Iddekinge.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# Directories where compiled files go, change is as you wish

function help()
{
	echo "configure options:"
	echo "-p <host>   set host platgorm win32 or linux (default automatic detection)"
	echo "-r <target> set rtl target is win32 or linux (default automatic detection)"
	echo "-l <ld path> set path to the gnu 'ld' program (default tries automatic detection)"
	echo "-L <ld name> set name of the gnu 'ld' program (default ld)"
	echo "-a <as path> path to as assembler (including name of as)"
	echo "-A <as name> set name of the gnu 'as' program (default as)"
	echo "-c <cfg path> Set path wehre config files are placed"
	echo "-R <path>   set root path of elaya"
	echo "-z          don't use pervious configuration"
	echo "-i <dir>    install directory"
	echo "-h          this help info"
	exit
}


echo "config started" >config.log
vlUsePrevious="1"


if test $HOME = "/"; then HOME=`pwd`;fi;
vlHost=""
case $OSTYPE in
	"linux-gnu" ) vlHost="linux";;
	"cygwin" ) vlHost="win32";;
esac
vlTarget=$vlHost


while getopts ":hp:r:a:l:zL:A:i:c:" vlOption
do
	case $vlOption in
	p ) vlHost=$OPTARG;;
	r ) vlTarget=$OPTARG;;
	z ) vlUsePrevious="0";;
	h ) help
		 exit;;
esac
done

vlParamFile="build_files/config/param.$vlHost.$vlTarget";
if test -e $vlParamFile;then
	source  $vlParamFile
else
	echo "Combination of platform  $vlHost and target $vlTarget is not possible";
 	exit
fi

if(test -z $vlHost); then
	echo "Host platform unkown, use -p option to set host platform";
fi


vlAsPathDir=""
vlLdPathDir=""
vlAsPathProg=""
vlLdPathProg=""
vlInstallDir=""
vlConfigDir=""

cd build_files/programs
sh conf.$vlHost $vlTarget
cd ../..

source config/config_conf.$vlHost.$vlTarget

#
# read previous config
#

vlPrevConfig="config/config.pref.$vlHost.$vlTarget"


if(test "$vlUsePrevious" = "1" -a -e $vlPrevConfig);
then
	echo "Use previous configuration :$vlPrevConfig"
	source $vlPrevConfig;
fi

#
#Read remaining parameters
#

OPTIND=1

while getopts ":hp:r:a:l:zL:A:c:" vlOption
do
	case $vlOption in
	p ) ;;
	r ) ;;
	z ) ;;
	a ) vlAsPathDir="$OPTARG";;
	A ) vlAsPathProg=$OPTARG;;
	l ) vlLdPathDir="$OPTARG";;
	L ) vlLdPathProg="$OPTARG";;
	i ) vlInstallDir="$OPTARG";;
	c ) vlConfigDir="$OPTARG";;
	* ) echo " Unsupported option:$OPTARG";exit;;
esac
done

#
# If parameter not set use automatic values
#


vlInstallExtra=$install_extra
vlLinkExeTo=$link_exe_to
if(test -z "$vlAsPathDir");then vlAsPathDir=$conf_as_dir;fi;
if(test -z "$vlLdPathDir");then vlLdPathDir=$conf_ld_dir;fi;
if(test -z "$vlAsPathProg");then vlAsPathProg=$conf_as_program;fi;
if(test -z "$vlLdPathProg");then vlLdPathProg=$conf_ld_program;fi;
if(test -z $vlInstallDir);then vlInstallDir=$install_dir;fi;
if(test -z $vlConfigDir);then vlConfigDir=$install_cfg;fi;


if(test -z $vlAsPathProg);
then
    echo "Unkown assembler for target '$lTarget', specify program and path with -A and -a option"
    exit
fi

if(test -z $vlLdPathProg);
then
    echo "Unkown linker for target '$vlTarget', specify program and path with -L and -l option"
    exit
fi


vlAsPath="$vlAsPathDir$vlAsPathProg"
vlLdPath="$vlLdPathDir$vlLdPathProg"

Dir_Program=$vlInstallDir/elaya/bin/
Dir_Cpl_Lib=$vlInstallDir/elaya/extra/lib/
Dir_Ela_Rtl=$vlInstallDir/elaya/lib/


#
# Write config to file for use later
#



echo "# previous session  config,automaticly genenrated.Don't change"   >$vlPrevConfig
echo "#"  >>$vlPrevConfig
echo "vlAsPathDir='$vlAsPathDir'" >>$vlPrevConfig
echo "vlLdPathDir='$vlLdPathDir'" >>$vlPrevConfig
echo "vlAsPathProg='$vlAsPathProg'" >>$vlPrevConfig
echo "vlLdPathProg='$vlLdPathProg'" >>$vlPrevConfig
echo "vlInstallDir='$vlInstallDir'" >>$vlPrevConfig
echo "vlConfigDir='$vlConfigDir'" >>$vlPrevConfig

echo "Host platform = $vlHost"
echo "Rtl target    = $vlTarget"
echo "Assembler path= $vlAsPath"
echo "Linker path   = $vlLdPath"
echo "Install dir   = $vlInstallDir"
echo "Config dir    = $vlConfigDir"



#set to y when compiling win32 and linux under linux.
#compile linux under win32 supported, but the
#build system can't handle it.
Can_Cross_Compile='y'
#fpc and ela options

Fpc="ppc386"
ela="ela"
eladep="eladep"

Opt_Fpc="-dmalloc -a  -O2 -Ci- -gl -Ch1000000  -S2c  -vrwen -Ratt"
Fpc_Opt_Unit_Path=""


# Main Program1


installed="config/installed.$vlHost.$vlTarget"
echo "rtl_target='$vlTarget'" >$installed

cfg_setup="config/cfg_setup.$vlHost.$vlTarget"

build_target=`pwd`/rtl/bin

echo "${vlTarget}_as=$vlAsPath" >$cfg_setup
echo "${vlTarget}_ld=$vlLdPath" >>$cfg_setup

cat config/cfg_setup.$vlHost.* >config/cfg_setup
echo "Rtl_Build_Out=$build_target" >>config/cfg_setup

echo "Dir_Ela_Rtl_Base=$Dir_Ela_Rtl" >>config/cfg_setup

build_conf_gen="config/build_conf.gen"

echo "#General configuration " >$build_conf_gen
echo "os_host=$vlHost" >>$build_conf_gen

build_conf="config/build_conf.$vlHost.$vlTarget"

echo Fpc_Opt_Unit_Path=$Fpc_Opt_Unit_Path>$build_conf
echo Rtl_Build_Out=$build_target>>$build_conf
echo Dir_Cpl_Lib=$Dir_Cpl_Lib>>$build_conf
echo Dir_Program=$Dir_Program>>$build_conf
echo Dir_Rtl=$Dir_Ela_Rtl/$vlTarget>>$build_conf
echo Dir_Ela_Rtl_Base=$Dir_Ela_Rtl>>$build_conf
echo Os_Host=$vlHost>>$build_conf
echo Os_Target=$vlTarget>>$build_conf
echo Opt_Fpc=$Opt_Fpc>>$build_conf
echo Fpc=$Fpc>>$build_conf
echo ELA=$ela>>$build_conf
echo Opt_Ela=$Opt_Ela>>$build_conf
echo Rtl_Target=$Rtl_Target>>$build_conf
echo Can_Cross_Compile=$Can_Cross_Compile>>$build_conf
echo Cpl_Target=$vlHost>>$build_conf
echo cmd_rm=$cmd_rm>>$build_conf
echo cmd_cp=$cmd_cp>>$build_conf
echo Dir_Dirt=./bin>>$build_conf
echo Dir_Sep=/>>$build_conf
echo Dir_as=$vlAsPath>>$build_conf
echo Dir_ld=$vlLdPath>>$build_conf
echo auto_load=$_auto_load>>$build_conf
echo pp_unit_ext=$pp_unit_ext>>$build_conf
echo eladep=$eladep>>$build_conf
echo exe_ext=$exe_ext>>$build_conf
echo link_exe_to=$vlLinkExeTo >>$build_conf
echo install_extra=$vlInstallExtra >>$build_conf
echo Dir_Cfg=$vlConfigDir >>$build_conf


sh build_files/programs/mkelamake.sh <build_files/config/eladirs.db >>config.log

cat_cfg=""

for i in config/installed.$vlHost.*;
do
  source $i
  cat_cfg="$cat_cfg cfg/cfg.$rtl_target.tpl"
done

cat  "cfg/ela.base.tpl" $cat_cfg >cfg/ela.tpl
cat  "cfg/lib.base.tpl" $cat_cfg  >cfg/lib.tpl
echo "END;" >>cfg/ela.tpl
echo "END;" >>cfg/lib.tpl
echo
echo FEEDBACK FEEDBACK FEEDBACK
echo 
echo For problems, bugs and comments please visit www.elaya.org.
echo or mailing list at : Elaya-public@lists.berlios.de
echo 
echo Thank you
echo 

