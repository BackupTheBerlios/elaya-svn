<html>
<title >Introduction to the language</title>
<body>
<a href='node006.htm'>[UP] Language Manual</a>       <a href="index.htm">[index]</a><hr>
<font size=+2><center><b>Introduction to the language</b></center></font>
<hr>
<font size=+1><b></b></font><br>
<pre><b>Elaya language compared with pascal:</b>
<UL>
<LI>Similarities:
<UL>
<LI>Same or nearly the same syntax and structure.
<LI>Same or nearly the same 'unit' model.
</ul>

<li>Differences with pascal:
<ul>
<LI>Different syntax
<LI>No system library, but autoloading.
</ul>
</ul>

<b>Interesting extra features:</b>
The reason for building the compiler and creating the language is for 
experimentation with  programming languages. Because of this, the language is 
not compleetly defined and is going to change in the future.
The plan was first  to build a compiler wich has enough to make it a little bit 
usable. Because I am used to pascal, many things looks similar to that language.
Secondly I started to add some new features and test if it is usable and how
it should be used.
Beside the similarites with Pascal there are some features wich makes Elaya just
 not a Pascal clone. 

The first major addition for experimentation is :<UL>
<LI><a href='node001.htm'>[missing link] Dynamic routines</a>
This feature has some similarities with OOP. The diffences is that a routine 
(procedure/function) represents a process and a class/object represents a 
call/object. A dynamic routine is an extention of a normal routine wich tries to
 improves its use.
</ul>

<b>More information</b>
The following links contains more information on the Elaya language and the 
similarities  and differences with pascal.
</pre><br>
<font size=+1><b>Links</b></font></br>
&nbsp;&nbsp;&nbsp;<a href='node050.htm'>Elaya for pascal programmers</a><br>
&nbsp;&nbsp;&nbsp;<a href='node018.htm'>Basic Features</a><br>
&nbsp;&nbsp;&nbsp;<a href='node157.htm'>Examples</a><br>
</body>
</html>
