{   ofiles.ela  - OOP file lib
    Elaya, the Fcompiler for the elaya language
    Copyright (C) 1999-2002  J.v.Iddekinge.
    Web   : www.elaya.org

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
}
unit;


public
type


	TStream=class inherit TRoot
	private
		var
			voFile : TFile;
	public
		function Open(ParSelf:PFileSelf;const ParName : string;ParMode : TOpenMode):boolean;
		function FileRead(ParSize : long;var ParRead : long;var ParBuffer : void):boolean;
		function FileWrite(ParSIze : long;var ParWrite : long;var ParBuffer : void):boolean;
		function Close:boolean;
		function EndOfFile:boolean;
		function FileSize : long;
		function FilePos : long;
	end;

end public

function TStream.FilePos : long;
begin
	exit(GetFilePos(voFile));
end;

function TStream.FileSize : long;
begin
	exit(GetFileSize(voFile));
end;

function TStream.Open(ParSelf:PFileSelf;const ParName : string;ParMode : TOpenMode):boolean;
begin
	exit(OpenFile(ParSelf >> ParSelf ,voFile >> ParFile,ParName >> ParFileName,ParMode >> ParMode));
end;

function TStream.FileRead(ParSize : long;var ParRead : long;var ParBuffer: void):boolean;
begin
	exit(readfile(voFile >> ParFile,ParSize >> ParSize,ParRead >> ParRead,ParBuffer >>ParBuffer));
end;

function TStream.FileWrite(ParSize : long;var ParWrite : long;var ParBuffer : void):boolean;
begin
	exit(writefile(voFile >> ParFile,ParSize >> ParSize,ParWrite >> ParWritten,ParBuffer >> ParBuffer));
end;

function TStream.Close:boolean;
begin
	exit(CloseFile(voFile >> ParFile));
end;

function TStream.EndOfFile:boolean;
begin
	exit(eof(voFile >> ParFile));
end;

end.



